(()=>{var o=1e-9,n=class extends Array{constructor(t=0,e=0){super();this[0]=t,this[1]=e,this.dirty=!0}get x(){return this[0]}set x(t){this[0]=t,this.dirty=!0}get y(){return this[1]}set y(t){this[1]=t,this.dirty=!0}set(t,e){this[0]=t,this[1]=typeof e=="undefined"?t:e,this.dirty=!0}multiply(t){return this[0]*=t,this[1]*=t,this.dirty=!0,this}divide(t){return console.assert(t!==0,"Cannot divide by 0"),this[0]/=t,this[1]/=t,this.dirty=!0,this}negative(){return this[0]=-this[0],this[1]=-this[1],this.dirty=!0,this}normalize(){let t=this.magnitude();return t===0?(this[0]=0,this[1]=0,this):this.divide(t)}magnitude(){return Math.sqrt(this[0]*this[0]+this[1]*this[1])}angle(){return Math.atan2(this[1],this[0])}clone(){return new n(this[0],this[1])}copy(t){this[0]=t[0],this[1]=t[1],this.dirty=!0}equal(t,e=o){return Math.abs(t[0]-this[0])<=e&&Math.abs(t[1]-this[1])<=e}direction(t,e){this[0]=Math.cos(t)*e,this[1]=Math.sin(t)*e}isZero(t=o){return this.equal([0,0],t)}static subtract(t,e,r){return r=r||new n,r[0]=t[0]-e[0],r[1]=t[1]-e[1],r}};var a=Math.PI/180,m=180/Math.PI;function c(s){return s*a}var i;(function(s){s[s.rest=0]="rest",s[s.accelerating=1]="accelerating",s[s.turning=2]="turning",s[s.cruising=3]="cruising",s[s.stopping=4]="stopping"})(i||(i={}));var h={velocity:new n,position:new n,acceleration:1,maxSpeed:5,state:0},u=class{constructor(t){this.lastRadians=0;this.force=new n;this.cachedAcceleration=new n;this.to={velocity:new n};this.options={...h,...t}}accelerateToDegrees(t,e=this.maxSpeed){this.accelerateToAngle(c(t),e)}accelerateToAngle(t,e=this.maxSpeed){t!==this.lastRadians?(this.state=2,this.to.velocity.direction(t,e)):this.speed!==e&&this.toSpeed(e)}toSpeed(t=this.maxSpeed){this.to.timeLeft=Math.abs(t-this.speed)/this.acceleration;let e=this.angle;this.cachedAcceleration.x=Math.cos(e)*this.acceleration,this.cachedAcceleration.y=Math.sin(e)*this.acceleration,this.state=1}stop(){this.cachedAcceleration=this.velocity.clone().normalize().negative(),this.cachedAcceleration.multiply(this.acceleration),this.to.timeLeft=this.speed/this.acceleration,this.state=4}accelerate(t){t>=this.to.timeLeft?(this.lastRadians=this.velocity.angle(),this.velocity.x+=this.cachedAcceleration.x*this.to.timeLeft,this.velocity.y+=this.cachedAcceleration.y*this.to.timeLeft,this.to.timeLeft=0,this.state===4?this.state=0:this.state===1&&(this.state=3)):(this.velocity.x+=this.cachedAcceleration.x*t,this.velocity.y+=this.cachedAcceleration.y*t,this.to.timeLeft-=t)}turn(t){let e=n.subtract(this.to.velocity,this.velocity).normalize();e.isZero()?this.state=3:(this.velocity.x+=e.x*this.acceleration*t,this.velocity.y+=e.y*this.acceleration*t)}update(t){switch(this.state){case 0:return;case 1:case 4:this.accelerate(t);break;case 2:this.turn(t);break;case 3:break}this.x+=this.velocity.x*t,this.y+=this.velocity.y*t}get state(){return this.options.state}set state(t){this.options.state=t}get angle(){return this.velocity.isZero()?this.lastRadians:this.velocity.angle()}get velocity(){return this.options.velocity}set velocity(t){if(!this.options.velocity.equal(t)){this.options.velocity.copy(t);let e=this.velocity.angle();this.cachedAcceleration.x=Math.cos(e)*this.acceleration,this.cachedAcceleration.y=Math.sin(e)*this.acceleration}}get speed(){return this.velocity.magnitude()}get acceleration(){return this.options.acceleration}set acceleration(t){this.options.acceleration=t}get position(){return this.options.position}set position(t){this.options.position.copy(t)}get maxSpeed(){return this.options.maxSpeed}set maxSpeed(t){this.options.maxSpeed=t}get x(){return this.options.position[0]}set x(t){this.options.position[0]=t}get y(){return this.options.position[1]}set y(t){this.options.position[1]=t}};})();
//# sourceMappingURL=physics.js.map
